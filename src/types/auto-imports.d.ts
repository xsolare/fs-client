/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-auto-import
export {}
declare global {
  const AUTH_KEY: typeof import('../utils/common/constant')['AUTH_KEY']
  const AUTH_REFRESH_KEY: typeof import('../utils/common/constant')['AUTH_REFRESH_KEY']
  const ApiProxy: typeof import('../utils/api/proxy')['ApiProxy']
  const AppRoutes: typeof import('../utils/router/routes')['AppRoutes']
  const AuthApi: typeof import('../utils/api/auth')['AuthApi']
  const DateFormat: typeof import('../utils/common/time')['DateFormat']
  const FsApi: typeof import('../utils/api/fs')['FsApi']
  const IRootStore: typeof import('../store/common/root-store')['IRootStore']
  const Link: typeof import('react-router-dom')['Link']
  const LocalStorage: typeof import('../utils/common/local-storage')['LocalStorage']
  const NavLink: typeof import('react-router-dom')['NavLink']
  const Navigate: typeof import('react-router-dom')['Navigate']
  const Observer: typeof import('mobx-react-lite')['Observer']
  const Outlet: typeof import('react-router-dom')['Outlet']
  const Route: typeof import('react-router-dom')['Route']
  const Routes: typeof import('react-router-dom')['Routes']
  const THEME: typeof import('../utils/common/constant')['THEME']
  const TaskEvalutionKey: typeof import('../utils/common/local-storage')['TaskEvalutionKey']
  const action: typeof import('mobx')['action']
  const api: typeof import('../utils/api/index')['api']
  const appStore: typeof import('../store/app.store')['default']
  const autorun: typeof import('mobx')['autorun']
  const axios: typeof import('axios')['default']
  const breakpoint: typeof import('../utils/theme/emotion-theme')['breakpoint']
  const buildTree: typeof import('../utils/common/build-tree-files')['buildTree']
  const clearedToday: typeof import('../utils/common/time')['clearedToday']
  const combineArrays: typeof import('../utils/common/utils')['combineArrays']
  const computed: typeof import('mobx')['computed']
  const createRef: typeof import('react')['createRef']
  const customWeekStartEndFormat: typeof import('../utils/common/time')['customWeekStartEndFormat']
  const dayOfYear: typeof import('../utils/common/time')['dayOfYear']
  const daysOfYear: typeof import('../utils/common/time')['daysOfYear']
  const deepCopy: typeof import('../utils/common/utils')['deepCopy']
  const emotionThemes: typeof import('../utils/theme/emotion-theme')['emotionThemes']
  const extendObservable: typeof import('mobx')['extendObservable']
  const flow: typeof import('mobx')['flow']
  const flowResult: typeof import('mobx')['flowResult']
  const forwardRef: typeof import('react')['forwardRef']
  const getAntdThemes: typeof import('../utils/theme/antd-theme')['getAntdThemes']
  const getBearerToken: typeof import('../utils/common/helpers')['getBearerToken']
  const getEmotionThemes: typeof import('../utils/theme/emotion-theme')['getEmotionThemes']
  const getId: typeof import('../utils/common/utils')['getId']
  const getUrlParam: typeof import('../utils/common/helpers')['getUrlParam']
  const graphql: typeof import('../utils/graphql/index')['graphql']
  const handleGQL: typeof import('../utils/graphql/index')['handleGQL']
  const hms: typeof import('../utils/common/time')['hms']
  const intercept: typeof import('mobx')['intercept']
  const isBoolean: typeof import('../utils/common/utils')['isBoolean']
  const isClientSide: typeof import('../utils/common/env')['isClientSide']
  const isDev: typeof import('../utils/common/env')['isDev']
  const isFullDay: typeof import('../utils/common/time')['isFullDay']
  const isLeapYear: typeof import('../utils/common/time')['isLeapYear']
  const isNumber: typeof import('../utils/common/utils')['isNumber']
  const isObject: typeof import('../utils/common/utils')['isObject']
  const isServerSide: typeof import('../utils/common/env')['isServerSide']
  const isTwoDateDifference: typeof import('../utils/common/time')['isTwoDateDifference']
  const isWindowExists: typeof import('../utils/common/helpers')['isWindowExists']
  const lazy: typeof import('react')['lazy']
  const makeAutoObservable: typeof import('mobx')['makeAutoObservable']
  const makeObservable: typeof import('mobx')['makeObservable']
  const matchIsMobile: typeof import('../utils/regexp/mobile')['matchIsMobile']
  const memo: typeof import('react')['memo']
  const observable: typeof import('mobx')['observable']
  const observe: typeof import('mobx')['observe']
  const observer: typeof import('mobx-react-lite')['observer']
  const onBecomeObserved: typeof import('mobx')['onBecomeObserved']
  const onBecomeUnobserved: typeof import('mobx')['onBecomeUnobserved']
  const onReactionError: typeof import('mobx')['onReactionError']
  const parseDate: typeof import('../utils/common/time')['parseDate']
  const pxToRem: typeof import('../utils/theme/emotion-theme')['pxToRem']
  const randomNum: typeof import('../utils/common/helpers')['randomNum']
  const reaction: typeof import('mobx')['reaction']
  const relativeTimeFromNow: typeof import('../utils/common/time')['relativeTimeFromNow']
  const runInAction: typeof import('mobx')['runInAction']
  const secondOfDay: typeof import('../utils/common/time')['secondOfDay']
  const secondOfDays: typeof import('../utils/common/time')['secondOfDays']
  const setController: typeof import('../utils/common/stores')['setController']
  const startTransition: typeof import('react')['startTransition']
  const store: typeof import('../store/common/index')['store']
  const styled: typeof import('@emotion/styled')['default']
  const themeBlue: typeof import('../utils/theme/emotion-theme')['themeBlue']
  const themeDark: typeof import('../utils/theme/emotion-theme')['themeDark']
  const themeLigth: typeof import('../utils/theme/emotion-theme')['themeLigth']
  const timeInRange: typeof import('../utils/common/time')['timeInRange']
  const timeRangeInRange: typeof import('../utils/common/time')['timeRangeInRange']
  const toJS: typeof import('mobx')['toJS']
  const useAppInitialize: typeof import('../hooks/user-app-initialize.hook')['useAppInitialize']
  const useAppStore: typeof import('../store/common/root-store')['useAppStore']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useEventListener: typeof import('../hooks/events/use-event-listener')['useEventListener']
  const useGetController: typeof import('../utils/common/stores')['useGetController']
  const useHref: typeof import('react-router-dom')['useHref']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInRouterContext: typeof import('react-router-dom')['useInRouterContext']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useIsomorphicLayoutEffect: typeof import('../hooks/events/use-isomorphic-layout-effect')['useIsomorphicLayoutEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLinkClickHandler: typeof import('react-router-dom')['useLinkClickHandler']
  const useLocalObservable: typeof import('mobx-react-lite')['useLocalObservable']
  const useLocation: typeof import('react-router-dom')['useLocation']
  const useMemo: typeof import('react')['useMemo']
  const useNavigate: typeof import('react-router-dom')['useNavigate']
  const useNavigationType: typeof import('react-router-dom')['useNavigationType']
  const useNewStore: typeof import('../utils/common/stores')['useNewStore']
  const useOutlet: typeof import('react-router-dom')['useOutlet']
  const useOutletContext: typeof import('react-router-dom')['useOutletContext']
  const useOutsideClick: typeof import('../hooks/events/use-outside-click')['useOutsideClick']
  const useParams: typeof import('react-router-dom')['useParams']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useResolvedPath: typeof import('react-router-dom')['useResolvedPath']
  const useRoutes: typeof import('react-router-dom')['useRoutes']
  const useScrollLock: typeof import('../hooks/use-scroll-lock')['useScrollLock']
  const useSearchParams: typeof import('react-router-dom')['useSearchParams']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const userStore: typeof import('../store/user.store')['default']
  const v4: typeof import('uuid')['v4']
  const when: typeof import('mobx')['when']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { AxiosInstance, AxiosResponse } from 'axios'
}
